sudo: required

services:
  - docker

matrix:
  include:
    # landlordd (daemon)
    - language: scala
      cache:
        directories:
          - $HOME/.ivy2/cache
          - $HOME/.sbt/launchers
      before_cache:
        # Ensure changes to the cache aren't persisted
        - rm -rf $HOME/.ivy2/cache/com/github/huntc/landlord
        # Delete all ivydata files since ivy touches them on each build
        - find $HOME/.ivy2/cache -name "ivydata-*.properties" | xargs rm
      before_script:
        - cd landlordd
        - unset _JAVA_OPTIONS

    # landlord (CLI)
    - language: rust
      before_script:
        - cd landlord

    # integration test (landlordd <--> landlord)
    - language: scala
      cache:
        directories:
          - $HOME/.ivy2/cache
          - $HOME/.sbt/launchers
      before_cache:
        # Ensure changes to the cache aren't persisted
        - rm -rf $HOME/.ivy2/cache/com/github/huntc/landlord
        # Delete all ivydata files since ivy touches them on each build
        - find $HOME/.ivy2/cache -name "ivydata-*.properties" | xargs rm
      install:
        - curl https://sh.rustup.rs/ | sh -s -- -y
      before_script:
        - unset _JAVA_OPTIONS
        - export PATH="$HOME/.cargo/bin:$PATH"
      script:
        - scripts/integration-test-cli

    # Publish to DockerHub (if branch begins with v)
    - language: scala
      cache:
        directories:
          - $HOME/.ivy2/cache
          - $HOME/.sbt/launchers
      before_cache:
        # Ensure changes to the cache aren't persisted
        - rm -rf $HOME/.ivy2/cache/com/github/huntc/landlord
        # Delete all ivydata files since ivy touches them on each build
        - find $HOME/.ivy2/cache -name "ivydata-*.properties" | xargs rm
      install:
        - "! { git describe --abbrev=0 --tags | grep ^v; } || { curl https://sh.rustup.rs/ | sh -s -- -y; }"
      before_script:
        - unset _JAVA_OPTIONS
        - export PATH="$HOME/.cargo/bin:$PATH"
      script:
        - "! { git describe --abbrev=0 --tags | grep ^v; } || scripts/release-dockerhub"
env:
  global:
    - secure: "Tyjntbdf89m/CjfffamyGJRafXRoh97y2swN3cmu2IwxRRKGMeStRuy5ZGFkR7I40oDAdSej7+Ub+zP215KsrAoA0ilQb3WcFoRDaR5HD/kTmQjBVaAg3QfjkN9DFNzMb5dB5kqVQDSCV7vcmlM3OT2iggA7Qe1uQsvUkwdQwRDcKSjUO9L7W2EK0/Vc0exhhoaxSOXoSz/pUa5HzeSef9JDh4mK/7SxqIY41RiPxzaMWB57tLDM5bhJH6w2QXFvxvTEeGcmNdrVZnAsdK7W/XV/ugWxj6faddtqvQds0Cd84XFoj+tPACQZYG9kOXLPt7HjgmbyDAsEQIAZy1WgYnMM/OG7G0wccMVpLCh4C2CRPH1N9TfiQ/I+wXXJiCW7ZtGfUzU9CEXMF2bWA/43qpQiMAqy7spDz6GGH0zARcCfjtq8pkH4Zg1xAOb4KkZx/8hrUatmd01c2jDnD8XeZjnoJu/IEbc/nd08B7ESQU93yn2acHYNfPNepiXNcPgmAtZ5Bv/YvpCf8WHt/gVi9eJH4Fbh+nzsxR/+EZ3cR/TMHFYhJsvVSGPrpQz9lKvv+oTR1XtvU6Q9SXunURQ/7NGej9r5mLla2FN18P/gzL0hVEX0+Lsncsp3VvKhB1B3JuLyZ9/S9qwgpR87U42TcJzgP1mAYP2cmKlFXhx46Cc="
    - secure: "VsykXqtZqTOopbeLlGy1LRTIW2j2GB1inmMqvL/9uhZ0OeEfMnuVHnw+S88+AFR3Rv8DKKyzzl+nSnxJT5lOVevUgZ4jRMwMAe74E9zreJ6JJ622HOXmwqQJENTcnLHQ/UUlzUwWv8wDZZ+E6bF/qMFIvLqXJSftUfkr63+ypzR7jxcplXlqLCzkMhOqxDh31AjAG7dH04hKFk880u3UKn6/2qyK1Z+XjxEp44ngpG6eCbYf1dmeHX7wRNfOIb9YoiWURR5khtGaTsF2zMFwlkmlj4EI9r6TQKKThx5imiljAd9C65AgMuPEJc0nkeUHTW4W2/6hY/rHwy7FVMy3dC7sxOs42xE+vE7lku8sNk0Ri/WYwOqBNKBmKr5WoN5le/TdoajXUUQVQ0jYIl79BCqWkhLCl/3jnAvsVELRZJt6Pg2d6GR2zwAvuKYqHPFKzGX1JHPXcMrAYAF4gAPV6nFbdFzvt5hIZEUxpEYFyXpCOcxY049+k1UAIfoQQ5YbzpCo9GD8kbR8dEuph0RSYJVDu27wEqvTornwasPXA9yBAA1agrpDI+mNEC5316d2HKiBPrxuuWPNrey0CMGR9rICqFQI3Jb9zHzXR7F/7sIPS9k32W7BOELDCfhaXjV3WZaHK/PcQtb+SSh0E9a9o8Nh72ilDSmvZsNz3RAnpaI="
